{"version":3,"sources":["components/ComponentScholarshipItem.js","components/ComponentScholarshipList.js","components/ComponentCallsScholarship.js","AppCallsScholarship.js","components/ComponentListItem.js","components/ComponentList.js","AppList.js","components/ComponentFaqsListItem.js","components/ComponentFaqsList.js","AppFaqsList.js","serviceWorker.js","index.js"],"names":["ComponentScholarshipItem","course","link","title","item","href","target","rel","className","ComponentScholarshipList","data","toggleClass","currentState","state","active","setState","coursesList","courses","map","index","key","node","this","provider","extra_class","join","onClick","Component","propsTypes","PropsTypes","array","isRequired","ComponentCallsScholarship","api_url","getData","providers","fetch","then","resolve","json","nodes","AppCallsScholarship","ComponentListItem","element","ComponentList","type","elements","result","output","AppList","ComponentFaqsListItem","description","ComponentFaqsList","length","AppFaqsList","Boolean","window","location","hostname","match","component_scholarship_bootcamps","component_scholarship_internationals","component_scholarship_nationals","component_scholarship_documents","component_scholarship_steps","component_faq_scholarships","component_faq_providers","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ed0c828a.chunk.js","sourcesContent":["import React  from 'react';\n\nconst ComponentScholarshipItem = ( { course } ) => {\n    const { link, title } = course;\n    const item = (link) ? <a href={ link } target=\"_blank\" rel=\"noopener noreferrer\">{ title }</a> : title;\n\n    return (\n        <div className=\"oportunities__calls--provider__course\">{ item }</div>\n    );\n};\n\nexport default ComponentScholarshipItem;\n","import React, { Component }  from 'react';\nimport PropsTypes from 'prop-types';\nimport ComponentScholarshipItem from './ComponentScholarshipItem';\n\n\nclass ComponentScholarshipList extends Component {\n    constructor( { data } ) {\n        super();\n\n        //this.addActiveClass= this.addActiveClass.bind(this);\n        this.state = {\n            data: data,\n            active: false,\n        };\n    }\n\n    toggleClass = () => {\n        const currentState = this.state.active;\n        this.setState({\n            active: !currentState\n        });\n    };\n\n    coursesList = courses => {\n        if (courses) {\n            return (\n                courses.map( (course, index) => <ComponentScholarshipItem key={ index } course={ course.node } /> )\n            );\n        }\n    };\n\n    render() {\n        const { provider, courses } = this.state.data;\n        const extra_class = this.state.active ? 'open' : '';\n\n        return (\n            <div className=\"oportunities__calls--provider js__accordion\">\n                <h3 className={ [ \"oportunities__calls--provider__name\", \"js__accordion-heading\", extra_class ].join(' ') } onClick={ this.toggleClass }>{ provider }</h3>\n                <div className={ [ \"oportunities__calls--provider__scholarships\", \"js__accordion-content\", extra_class ].join(' ') } onClick={ this.toggleClass }>{ this.coursesList(courses) }</div>\n            </div>\n        );\n    }\n\n}\n\nComponentScholarshipList.propsTypes = {\n    courses: PropsTypes.array.isRequired,\n};\n\nexport default ComponentScholarshipList;\n","import React, { Component }  from 'react';\nimport PropsTypes from 'prop-types';\nimport ComponentScholarshipList from './ComponentScholarshipList';\n\nclass ComponentCallsScholarship extends Component {\n    constructor( { api_url } ) {\n        super();\n\n        this.state = {\n            api_url: api_url,\n            data: []\n        };\n    }\n\n    componentDidMount() {\n        const { api_url } = this.state;\n\n        fetch(api_url).then( resolve => {\n            return resolve.json();\n        }).then( data => {\n            const { nodes } = data;\n\n            this.setState({\n                data: nodes\n            });\n        });\n    }\n\n    getData = providers => {\n        if (providers) {\n            return (\n                providers.map( (provider, index) => <ComponentScholarshipList key={ index } data={ provider } /> )\n            );\n        }\n    }\n\n    render() {\n        const { data } = this.state;\n\n        if (data) {\n            return (\n                <div className=\"oportunities__calls--providers\">\n                    { this.getData(data) }\n                </div>\n            );\n        }\n    }\n}\n\nComponentCallsScholarship.propsTypes = {\n    providers: PropsTypes.array.isRequired,\n};\n\nexport default ComponentCallsScholarship;","import React from 'react';\nimport ComponentCallsScholarship from './components/ComponentCallsScholarship'\n\nfunction AppCallsScholarship( { api_url } ) {\n  return (\n    <div className=\"building--app\">\n      <ComponentCallsScholarship api_url={ api_url } />\n    </div>\n  );\n}\n\nexport default AppCallsScholarship;\n","import React  from 'react';\n\nconst ComponentListItem = ( { element } ) => {\n    const { title } = element;\n\n    return (\n        <li>{ title }</li>\n    );\n};\n\nexport default ComponentListItem;\n","import React, { Component }  from 'react';\nimport PropsTypes from 'prop-types';\nimport ComponentListItem from './ComponentListItem';\n\nclass ComponentList extends Component {\n    constructor( { api_url, type } ) {\n        super();\n\n        this.state = {\n            api_url: api_url,\n            type: type,\n            data: []\n        };\n    }\n\n    componentDidMount() {\n        const { api_url } = this.state;\n\n        fetch(api_url).then( resolve => {\n            return resolve.json();\n        }).then( data => {\n            const { nodes } = data;\n\n            this.setState({\n                data: nodes\n            });\n        });\n    }\n\n    getData = elements => {\n        if (elements) {\n            return (\n                elements.map( (element, index) => <ComponentListItem key={ index } element={ element.node } /> )\n            );\n        }\n    }\n\n    render() {\n        const { data, type } = this.state;\n        const result = this.getData(data); \n        const output = type === \"ordered\" ? <ol>{ result }</ol> : <ul>{ result }</ul>;\n\n        if (data) {\n            return (\n                <div>{ output }</div>\n            );\n        }\n    }\n}\n\nComponentList.propsTypes = {\n    elements: PropsTypes.array.isRequired,\n};\n\nexport default ComponentList;","import React from 'react';\nimport ComponentList from './components/ComponentList'\n\nfunction AppList( { api_url, type } ) {\n  return (\n    <div className=\"building--app\">\n      <ComponentList api_url={ api_url } type={ type } />\n    </div>\n  );\n}\n\nexport default AppList;\n","import React  from 'react';\n\nconst ComponentFaqsListItem = ( { element } ) => {\n    const { title, description } = element;\n\n    return (\n        <li>\n            <b>{ title }</b> <span>{ description }</span>\n        </li>\n    );\n};\n\nexport default ComponentFaqsListItem;\n","import React, { Component }  from 'react';\nimport PropsTypes from 'prop-types';\nimport ComponentFaqsListItem from './ComponentFaqsListItem';\n\nclass ComponentFaqsList extends Component {\n    constructor( { api_url, type } ) {\n        super();\n\n        this.state = {\n            api_url: api_url,\n            type: type,\n            data: []\n        };\n    }\n\n    componentDidMount() {\n        const { api_url } = this.state;\n\n        fetch(api_url).then( resolve => {\n            return resolve.json();\n        }).then( data => {\n            const { nodes } = data;\n\n            this.setState({\n                data: nodes\n            });\n        });\n    }\n\n    getData = elements => {\n        if (elements) {\n            return (\n                elements.map( (element, index) => <ComponentFaqsListItem key={ index } element={ element.node } /> )\n            );\n        }\n    }\n\n    render() {\n        const { data, type } = this.state;\n\n        if (data && data.length > 0) {\n            const result = this.getData(data); \n            const output = type === \"ordered\" ? <ol>{ result }</ol> : <ul>{ result }</ul>;\n\n            return (\n                <div>\n                    <div>{ output }</div>\n                </div>\n            );\n        } else {\n            return (\n                <div></div>\n            );\n        }\n    }\n}\n\nComponentFaqsList.propsTypes = {\n    elements: PropsTypes.array.isRequired,\n};\n\nexport default ComponentFaqsList;","import React from 'react';\nimport ComponentFaqsList from './components/ComponentFaqsList'\n\nfunction AppFaqsList( { api_url, type, title } ) {\n  return (\n    <div className=\"building--app\">\n      <ComponentFaqsList api_url={ api_url } type={ type } title={ title } />\n    </div>\n  );\n}\n\nexport default AppFaqsList;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppCallsScholarship from './AppCallsScholarship';\nimport AppList from './AppList';\nimport AppFaqsList from './AppFaqsList';\nimport * as serviceWorker from './serviceWorker';\n\nconst api_url = \"https://ops829p-ttp.pantheonsite.io/pinn\";\nconst component_scholarship_bootcamps = `${api_url}/scholarships?component=30`;\nconst component_scholarship_internationals = `${api_url}/scholarships?component=31`;\nconst component_scholarship_nationals = `${api_url}/scholarships?component=32`;\nconst component_scholarship_documents = `${api_url}?component=33`;\nconst component_scholarship_steps = `${api_url}?component=34`;\nconst component_faq_scholarships = `${api_url}?component=35`;\nconst component_faq_providers = `${api_url}?component=36`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCallsScholarship api_url={ component_scholarship_bootcamps } />\n  </React.StrictMode>,\n  document.getElementById('react-app-calls-scholarship-bootcamps')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCallsScholarship api_url={ component_scholarship_internationals } />\n  </React.StrictMode>,\n  document.getElementById('react-app-calls-scholarship-internationals')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppCallsScholarship api_url={ component_scholarship_nationals } />\n  </React.StrictMode>,\n  document.getElementById('react-app-calls-scholarship-nationals')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppList api_url={ component_scholarship_documents } type=\"unordered\" />\n  </React.StrictMode>,\n  document.getElementById('react-app-calls-scholarship-documents')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppList api_url={ component_scholarship_steps } type=\"ordered\" />\n  </React.StrictMode>,\n  document.getElementById('react-app-calls-scholarship-steps')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppFaqsList api_url={ component_faq_scholarships } type=\"ordered\" />\n  </React.StrictMode>,\n  document.getElementById('react-app-faqs-scholarships')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppFaqsList api_url={ component_faq_providers } type=\"ordered\" />\n  </React.StrictMode>,\n  document.getElementById('react-app-faqs-providers')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}